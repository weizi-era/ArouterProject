plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion app_android.compileSdkVersion
    buildToolsVersion app_android.buildToolsVersion

    defaultConfig {
        applicationId "com.example.arouterproject"
        minSdkVersion app_android.minSdkVersion
        targetSdkVersion app_android.targetSdkVersion
        versionCode app_android.versionCode
        versionName app_android.versionName

        testInstrumentationRunner app_android.testInstrumentationRunner

        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))

        javaCompileOptions {
            annotationProcessorOptions {
                // project.getName() == app
                arguments = [moduleName: project.getName(), packageNameForAPT: packageNameForAPT]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    app_dependencies.each {
        k,v -> implementation v
    }

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation project(":arouter-api")
    // 依赖注解
    implementation project(":arouter-annotation")

    // 依赖注解处理器  才能工作
    annotationProcessor project(":arouter-compiler")

    if (isRelease) {
        // 进if，集成，融为一体（order，personal）

        // 订单模块
        implementation project(":order")

        // 个人中心模块
        implementation project(":personal")
    }
}